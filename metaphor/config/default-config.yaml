# Based on the Snakemake RNASeq workflow:
#   https://github.com/snakemake-workflows/rna-seq-star-deseq2/

# Make sure that the module separators have the same amount
# of '#' characters as they are parsed by scripts from the documentation.

###############################################################
# TOP LEVEL
# These settings are valid for all steps in the workflow.
###############################################################

# Path or URL to sequencing unit sheet (TSV format, columns: sample, unit, fq1, fq2)
# Units are technical replicates (e.g. lanes, or resequencing of the same biological
# sample).

samples: samples.csv

# Path to the Metaphor data directory, where databases (COG, EggNOG, NCBI Taxonomy)
# will be installed. Leave 'DEFAULT' to use the Metaphor installation directory (config folder).
data_dir: DEFAULT

# CPU settings
# Total cores are passed from the command line
cores_per_big_task: 1         # Percentage of workflow cores to use per big task
cores_per_medium_task: 0.5    # Percentage of workflow cores to use per medium task
cores_per_small_task: 0.25    # Percentage of workflow cores to use per small task

# Memory settings
max_mb: 65536         # Max MB memory to be used.
local_execution: True  # Set this to False when running on a cluster. It makes better usage of memory settings on each node.

# Plotting
transparent_background: True  # Whether to draw figures with a transparent background
dpi: 600  # Dots per inch (quality of figures). 600 is publication-level quality.
output_format: "png"  # Output format of plots. Values are the ones supported by plt.savefig().

# Modules in this string will undergo cleanup process
# See the 'cleanup_modules' function in the common.smk module for clarification
cleanup_modules:
  activate: True
  modules: "qc mapping"  # Module names to be cleaned up, space separated

###############################################################
# QC
###############################################################

fastp:
  activate: True
  length_required: 50
  cut_mean_quality: 30
  extra: "--detect_adapter_for_pe"

merge_reads:
  activate: True

host_removal:
  activate: False
  reference: ""

fastqc:
  activate: True

multiqc:
  activate: True

###############################################################
# ASSEMBLY
###############################################################
coassembly: False  # Whether to perform coassembly (also known as pooled assembly). If this is true, all samples are merged together and assembled into a single file of contigs.

megahit:
  preset: "meta-large"
  cleanup: True
  min_contig_len: 1000
  rename_contigs: True

metaquast:
  activate: False
  coassembly_reference: ""  # Reference FASTA file for Metaquast to use as reference. Only required if `coassembly` is True.

###############################################################
# ANNOTATION
###############################################################

prodigal:
  activate: True
  mode: "meta"
  quiet: True
  genes: False
  scores: False

prokka:
  activate: False
  args: "--quiet --force"

diamond:
  db: "COG2020/cog-20.dmnd"      # Will try to create from db_source if it doesn't exist.
  db_source: "COG2020/cog-20.fa.gz"
  output_type: 6
  output_format: "qseqid sseqid stitle evalue bitscore staxids sscinames"

cog_functional_parser:
  activate: True
  db: "COG2020"

lineage_parser:
  activate: True
  taxonmap: "COG2020/cog-20.taxonmap.tsv"
  rankedlineage: "taxonomy/rankedlineage.dmp"
  names: "taxonomy/names.dmp"  # Path of names file of NCBI Taxonomy 
  nodes: "taxonomy/nodes.dmp"  # Path of nodes file of NCBI Taxonomy
  download_url: "https://ftp.ncbi.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz"  # URL to download NCBI Taxonomy database

plot_cog_functional:
  activate: True
  filter_categories: True
  categories_cutoff: 0.01  # Remove categories with mean abundance across samples smaller than this value

plot_taxonomies:
  activate: True
  tax_cutoff: 20  # Only show the N most abundant taxa for any rank. Leave as 0 for no filtering. Low abundance taxa will be grouped as 'Low abundance'.
  colormap: "tab20c"  # Which matplotlib colormap to use

###############################################################
# BINNING
###############################################################

cobinning: True # Whether to perform cobinning. When this is true, only one binning group will be used. If False, samples will be binned according to their 'group' column.

vamb:
  activate: True
  minfasta: 100000
  batchsize: 256

metabat2:
  activate: True
  seed: 0
  preffix: "bin"  # Preffix of each bin, e.g. bin.1.fa, bin.2.fa, etc.

concoct:
  activate: True

das_tool:
  activate: True
  score_threshold: 0.5
  bins_report: True

###############################################################
# POSTPROCESSING
###############################################################

postprocessing:
  activate: True
  runtime_unit: "m"
  runtime_cutoff: 5
  memory_unit: "max_vms"
  memory_cutoff: 1
  memory_gb: True
